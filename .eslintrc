{
  "env": {
    "es6": true,
    "node": true
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2021,
    "project": true
  },
  "plugins": ["import", "@typescript-eslint"],
  "extends": [
    "eslint:all",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:@typescript-eslint/all",
    "prettier"
  ],
  "rules": {
    // This is personal preference. Ternary is helpful for shorten conditional code.
    "no-ternary": "off",

    // There are many cases that alphabetic sort not the best solution.
    "sort-vars": "off",

    // There are many cases that alphabetic sort not the best solution.
    "sort-keys": "off",

    // This is a discord bot project, console will not be viewable by user.
    "no-console": "off",

    // In ES6, make variable declaration in one line doesn't make sense. At
    // opposite, we should avoid it.
    "one-var": [
      "error",
      {
        "let": "never",
        "const": "never"
      }
    ],

    // We need this to do asynchronous in event handler.
    "no-void": [
      "error",
      {
        "allowAsStatement": true
      }
    ],

    // This conflict with `discord.js`.
    "import/extensions": [
      "error",
      {
        "js": "never",
        "ts": "never"
      }
    ],

    // This rule will conflict with type import.
    "no-duplicate-imports": "off",

    // We need `toString` of classes from discord.js
    "@typescript-eslint/no-base-to-string": [
      "error",
      { "ignoredTypeNames": ["GuildBasedChannel"] }
    ],

    "@typescript-eslint/prefer-readonly-parameter-types": [
      "off",
      { "ignoreInferredTypes": true }
    ],

    // Project specific naming convention.
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "default",
        "format": ["camelCase"],
        "leadingUnderscore": "allow",
        "trailingUnderscore": "allow"
      },
      {
        "selector": "variable",
        "format": ["camelCase", "UPPER_CASE"],
        "leadingUnderscore": "allow",
        "trailingUnderscore": "allow"
      },
      {
        "selector": "typeLike",
        "format": ["PascalCase"]
      },
      {
        "selector": "typeProperty",
        "format": ["camelCase", "UPPER_CASE"]
      }
    ],

    "max-statements": ["error", { "max": 20 }],

    "no-magic-numbers": "off",
    "@typescript-eslint/no-magic-numbers": [
      "error",
      { "ignore": [0, 1, -1], "ignoreTypeIndexes": true }
    ],

    "max-lines-per-function": ["error", { "skipBlankLines": true }]
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [".js", ".ts", ".d.ts"]
      },
      "typescript": {
        "project": "./tsconfig.json",
        "alwaysTryTypes": true
      }
    }
  }
}
